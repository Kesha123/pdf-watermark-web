name: PDF Watermark - Deploy - Production

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
      - 'frontend/**'
      - 'iac/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-production
  cancel-in-progress: false

jobs:
  environment-deploy:
    name: Deploy Production Environment
    environment: production
    runs-on: ubuntu-latest
    outputs:
      resources: ${{ steps.pulumi-output.outputs.resources }}
    defaults:
      run:
        working-directory: iac
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      PULUMI_CONFIG_PASSPHRASE: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: iac/package-lock.json

      - name: Install Dependencies
        run: npm ci --omit=optional

      - name: Pulumi Login
        run: |-
          pulumi pulumi login --local --token ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Pulumi Up
        run: |-
          pulumi up --stack prod --yes --skip-preview

      - name: Pulumi Output
        id: pulumi-output
        run: |-
          RESOURCES=$(pulumi stack --stack production output --json)
          echo $RESOURCES
          {
            echo 'resources<<EOF'
            echo $RESOURCES
            echo EOF
          } >> "$GITHUB_OUTPUT"

  call-lambda-build-deploy:
    name: Lambda - Build, Deploy
    needs: environment-deploy
    uses: ./.github/workflows/lambda-build-deploy.yaml
    secrets: inherit
    with:
      AWS_DIST_LAMBDA_BUCKET_NAME: ${{ fromJson(needs.environment-deploy.outputs.resources).resources.lambda.bucketName }}
      AWS_DIST_LAMBDA_NAME: ${{ fromJson(needs.environment-deploy.outputs.resources).resources.lambda.functionName }}

  call-frontend-build-deploy:
    name: Call Frontend Build and Deploy
    needs: environment-deploy
    uses: ./.github/workflows/frontend-build-deploy.yaml
    secrets: inherit
    with:
      ENVIRONMENT: production
      AWS_DIST_FRONTEND_BUCKET_NAME: ${{ fromJson(needs.environment-deploy.outputs.resources).resources.cognito.frontendBucketName }}
